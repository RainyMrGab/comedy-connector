schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type Mutation {
  createTeam(input: CreateTeamInput!): Team
  deleteTeam(input: DeleteTeamInput!): Team
  updateTeam(input: UpdateTeamInput!): Team
}

type Query {
  getTeam(city: String!, id: ID!): Team
  listTeams(filter: TableTeamFilterInput, limit: Int, nextToken: String): TeamConnection
  queryTeamsByIdTypeIndex(after: String, first: Int, id: ID!): TeamConnection
}

type Subscription {
  onCreateTeam(city: String, contact: AWSJSON, createdDate: AWSDateTime, id: ID, name: String): Team @aws_subscribe(mutations : ["createTeam"])
  onDeleteTeam(city: String, contact: AWSJSON, createdDate: AWSDateTime, id: ID, name: String): Team @aws_subscribe(mutations : ["deleteTeam"])
  onUpdateTeam(city: String, contact: AWSJSON, createdDate: AWSDateTime, id: ID, name: String): Team @aws_subscribe(mutations : ["updateTeam"])
}

type Team {
  city: String!
  contact: AWSJSON
  createdDate: AWSDateTime!
  id: ID!
  interest: AWSJSON
  name: String!
  type: String
  verification: AWSJSON
}

type TeamConnection {
  items: [Team]
  nextToken: String
}

input CreateTeamInput {
  city: String!
  contact: AWSJSON
  createdDate: AWSDateTime!
  id: ID!
  interest: AWSJSON
  name: String!
  type: String
  verification: AWSJSON
}

input DeleteTeamInput {
  city: String!
  id: ID!
}

input ModelSizeInput {
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input TableBooleanFilterInput {
  attributeExists: Boolean
  eq: Boolean
  ne: Boolean
}

input TableFloatFilterInput {
  attributeExists: Boolean
  between: [Float]
  eq: Float
  ge: Float
  gt: Float
  le: Float
  lt: Float
  ne: Float
}

input TableIDFilterInput {
  attributeExists: Boolean
  beginsWith: ID
  between: [ID]
  contains: ID
  eq: ID
  ge: ID
  gt: ID
  le: ID
  lt: ID
  ne: ID
  notContains: ID
  size: ModelSizeInput
}

input TableIntFilterInput {
  attributeExists: Boolean
  between: [Int]
  eq: Int
  ge: Int
  gt: Int
  le: Int
  lt: Int
  ne: Int
}

input TableStringFilterInput {
  attributeExists: Boolean
  beginsWith: String
  between: [String]
  contains: String
  eq: String
  ge: String
  gt: String
  le: String
  lt: String
  ne: String
  notContains: String
  size: ModelSizeInput
}

input TableTeamFilterInput {
  city: TableStringFilterInput
  createdDate: TableStringFilterInput
  id: TableIDFilterInput
  name: TableStringFilterInput
  type: TableStringFilterInput
}

input UpdateTeamInput {
  city: String!
  contact: AWSJSON
  createdDate: AWSDateTime
  id: ID!
  interest: AWSJSON
  name: String
  type: String
  verification: AWSJSON
}
